import React, { useRef, useState } from 'react'; import { motion } from 'framer-motion'; import { Phone, Mail, Send, Check } from 'lucide-react'; export default function Contact() { const [formData, setFormData] = useState({ name: '', email: '', message: '' }); const [status, setStatus] = useState({ message: '', isError: false }); const [isLoading, setIsLoading] = useState(false); const handleInputChange = (e) => { const { name, value } = e.target; setFormData(prev => ({ ...prev, [name]: value })); }; const handleSubmit = async (e) => { e.preventDefault(); setIsLoading(true); setStatus({ message: '', isError: false }); try { if (!formData.name || !formData.email || !formData.message) { throw new Error('Por favor, preencha todos os campos.'); } if (!/\S+@\S+\.\S+/.test(formData.email)) { throw new Error('Por favor, insira um email válido.'); } await new Promise(resolve => setTimeout(resolve, 2000)); setStatus({ message: 'Mensagem enviada com sucesso! Entraremos em contato em breve.', isError: false }); setFormData({ name: '', email: '', message: '' }); } catch (error) { setStatus({ message: error.message, isError: true }); } finally { setIsLoading(false); } }; const containerVariants = { hidden: { opacity: 0 }, visible: { opacity: 1, transition: { staggerChildren: 0.2 } } }; const itemVariants = { hidden: { y: 50, opacity: 0 }, visible: { y: 0, opacity: 1, transition: { duration: 0.6 } } }; const contactInfo = [ { icon: Phone, title: 'Telefone', info: '(11) 99999-9999', description: 'Ligue para fazer seu pedido' }, { icon: Mail, title: 'Email', info: 'contato@brasilfuds.com.br', description: 'Envie sua mensagem' } ]; return ( <section id="contact" className="py-20 bg-gradient-to-b from-gray-50 to-white relative overflow-hidden"> <div className="absolute inset-0 opacity-5"> <div className="absolute top-20 right-20 w-72 h-72 bg-orange-500 rounded-full blur-3xl"></div> <div className="absolute bottom-20 left-20 w-96 h-96 bg-red-500 rounded-full blur-3xl"></div> </div> <div className="relative z-10 container mx-auto px-4 sm:px-6 lg:px-8"> <motion.div initial="hidden" whileInView="visible" viewport={{ once: true }} variants={containerVariants} className="text-center mb-16" > <motion.span variants={itemVariants} className="inline-block bg-gradient-to-r from-orange-500 to-red-500 text-white px-6 py-2 rounded-full text-sm font-semibold mb-4" > Entre em Contato </motion.span> <motion.h2 variants={itemVariants} className="text-4xl md:text-5xl font-bold text-gray-900 mb-6" > Vamos <span className="bg-gradient-to-r from-orange-500 to-red-500 bg-clip-text text-transparent"> Conversar </span> </motion.h2> <motion.p variants={itemVariants} className="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed" > Tem alguma dúvida, sugestão ou quer fazer um pedido especial? Estamos aqui para ajudar! </motion.p> </motion.div> <div className="grid lg:grid-cols-2 gap-16 items-start"> <motion.div initial="hidden" whileInView="visible" viewport={{ once: true }} variants={containerVariants} > <motion.h3 variants={itemVariants} className="text-2xl font-bold text-gray-900 mb-8" > Como podemos ajudar? </motion.h3> <div className="space-y-6 mb-8"> {contactInfo.map((info, index) => ( <motion.div key={index} variants={itemVariants} whileHover={{ scale: 1.02, x: 10 }} className="flex items-start gap-4 p-6 bg-white rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 border-l-4 border-orange-500" > <div className="w-12 h-12 bg-gradient-to-r from-orange-500 to-red-500 rounded-xl flex items-center justify-center flex-shrink-0"> <info.icon className="w-6 h-6 text-white" /> </div> <div> <h4 className="text-lg font-semibold text-gray-900 mb-1">{info.title}</h4> <p className="text-orange-600 font-medium mb-1">{info.info}</p> <p className="text-gray-600 text-sm">{info.description}</p> </div> </motion.div> ))} </div> <motion.div variants={itemVariants} className="bg-gradient-to-br from-orange-500 to-red-500 rounded-3xl p-8 text-white" > <h4 className="text-xl font-bold mb-4">Horário de Funcionamento</h4> <div className="space-y-3"> <div className="flex justify-between items-center border-b border-white border-opacity-20 pb-2"> <span>Segunda a Quinta</span> <span className="font-semibold">18h - 23h</span> </div> <div className="flex justify-between items-center border-b border-white border-opacity-20 pb-2"> <span>Sexta e Sábado</span> <span className="font-semibold">18h - 01h</span> </div> <div className="flex justify-between items-center"> <span>Domingo</span> <span className="font-semibold">18h - 22h</span> </div> </div> </motion.div> </motion.div> <motion.div initial="hidden" whileInView="visible" viewport={{ once: true }} variants={containerVariants} > <motion.form variants={itemVariants} onSubmit={handleSubmit} className="bg-white rounded-3xl shadow-2xl p-8 space-y-6" > <motion.div variants={itemVariants}> <label htmlFor="name" className="block text-sm font-semibold text-gray-700 mb-2"> Nome Completo </label> <input type="text" id="name" name="name" value={formData.name} onChange={handleInputChange} className="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-orange-500 focus:outline-none transition-colors duration-300" placeholder="Seu nome" required /> </motion.div> <motion.div variants={itemVariants}> <label htmlFor="email" className="block text-sm font-semibold text-gray-700 mb-2"> Email </label> <input type="email" id="email" name="email" value={formData.email} onChange={handleInputChange} className="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-orange-500 focus:outline-none transition-colors duration-300" placeholder="seu@email.com" required /> </motion.div> <motion.div variants={itemVariants}> <label htmlFor="message" className="block text-sm font-semibold text-gray-700 mb-2"> Mensagem </label> <textarea id="message" name="message" value={formData.message} onChange={handleInputChange} rows="5" className="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-orange-500 focus:outline-none transition-colors duration-300 resize-none" placeholder="Sua mensagem..." required ></textarea> </motion.div> {status.message && ( <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className={`p-4 rounded-xl flex items-center gap-3 ${ status.isError ? 'bg-red-50 text-red-700 border border-red-200' : 'bg-green-50 text-green-700 border border-green-200' }`} > {!status.isError && <Check className="w-5 h-5" />} <span className="text-sm font-medium">{status.message}</span> </motion.div> )} <motion.button type="submit" variants={itemVariants} whileHover={{ scale: 1.02 }} whileTap={{ scale: 0.98 }} disabled={isLoading} className={`w-full py-4 rounded-xl font-semibold text-white transition-all duration-300 flex items-center justify-center gap-3 ${ isLoading ? 'bg-gray-400 cursor-not-allowed' : 'bg-gradient-to-r from-orange-500 to-red-500 hover:shadow-lg' }`} > {isLoading ? ( <div className="w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin"></div> ) : ( <Send className="w-5 h-5" /> )} {isLoading ? 'Enviando...' : 'Enviar Mensagem'} </motion.button> </motion.form> </motion.div> </div> </div> </section> ); }